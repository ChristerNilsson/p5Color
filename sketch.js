// Generated by CoffeeScript 1.11.1
var bb, gg, input1, input2, mousePressed, rr, setPixel, setup, show, showNumbers, slider, sliderchange;

slider = 0;

input1 = 0;

input2 = 0;

rr = 0;

gg = 0;

bb = 0;

setup = function() {
  var canvas;
  canvas = createCanvas(512, 512);
  canvas.position(20, 20);
  pixelDensity(1);
  slider = createSlider(0, 255, 0);
  slider.position(20, 285);
  slider.input(sliderchange);
  slider.size(512, 20);
  input1 = createInput();
  input1.position(20, 320);
  input1.size(256, 20);
  input2 = createInput();
  input2.position(256 + 20, 320);
  input2.size(256, 20);
  sc();
  return show();
};

mousePressed = function() {
  if ((0 <= mouseX && mouseX < 256) && (0 <= mouseY && mouseY < 256)) {
    rr = mouseX;
    gg = mouseY;
    return showNumbers();
  }
};

sliderchange = function() {
  bb = slider.value();
  return show();
};

show = function() {
  var g, k, l, len, len1, r, ref, ref1;
  loadPixels();
  ref = range(256);
  for (k = 0, len = ref.length; k < len; k++) {
    r = ref[k];
    ref1 = range(256);
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      g = ref1[l];
      setPixel(r, g, [r, g, bb, 255]);
    }
  }
  updatePixels();
  return showNumbers();
};

showNumbers = function() {
  input1.value((nf(rr / 255, 1, 3)) + ", " + (nf(gg / 255, 1, 3)) + ", " + (nf(bb / 255, 1, 3)));
  input2.value(rr + ", " + gg + ", " + bb);
  fill(rr, gg, bb);
  return rect(256, 0, 256, 256);
};

setPixel = function(i, j, pixel) {
  var index;
  index = 4 * ((0 + j) * 512 + 0 + i);
  pixels[index + 0] = pixel[0];
  pixels[index + 1] = pixel[1];
  pixels[index + 2] = pixel[2];
  return pixels[index + 3] = pixel[3];
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2tldGNoLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQTs7QUFBQSxNQUFBLEdBQVM7O0FBQ1QsTUFBQSxHQUFTOztBQUNULE1BQUEsR0FBUzs7QUFDVCxFQUFBLEdBQUs7O0FBQ0wsRUFBQSxHQUFLOztBQUNMLEVBQUEsR0FBSzs7QUFFTCxLQUFBLEdBQVEsU0FBQTtBQUNOLE1BQUE7RUFBQSxNQUFBLEdBQVMsWUFBQSxDQUFhLEdBQWIsRUFBaUIsR0FBakI7RUFDVCxNQUFNLENBQUMsUUFBUCxDQUFnQixFQUFoQixFQUFtQixFQUFuQjtFQUNBLFlBQUEsQ0FBYSxDQUFiO0VBRUEsTUFBQSxHQUFTLFlBQUEsQ0FBYSxDQUFiLEVBQWdCLEdBQWhCLEVBQXFCLENBQXJCO0VBQ1QsTUFBTSxDQUFDLFFBQVAsQ0FBZ0IsRUFBaEIsRUFBb0IsR0FBcEI7RUFDQSxNQUFNLENBQUMsS0FBUCxDQUFhLFlBQWI7RUFDQSxNQUFNLENBQUMsSUFBUCxDQUFZLEdBQVosRUFBZ0IsRUFBaEI7RUFFQSxNQUFBLEdBQVMsV0FBQSxDQUFBO0VBQ1QsTUFBTSxDQUFDLFFBQVAsQ0FBZ0IsRUFBaEIsRUFBb0IsR0FBcEI7RUFDQSxNQUFNLENBQUMsSUFBUCxDQUFZLEdBQVosRUFBaUIsRUFBakI7RUFFQSxNQUFBLEdBQVMsV0FBQSxDQUFBO0VBQ1QsTUFBTSxDQUFDLFFBQVAsQ0FBZ0IsR0FBQSxHQUFJLEVBQXBCLEVBQXdCLEdBQXhCO0VBQ0EsTUFBTSxDQUFDLElBQVAsQ0FBWSxHQUFaLEVBQWlCLEVBQWpCO0VBRUEsRUFBQSxDQUFBO1NBQ0EsSUFBQSxDQUFBO0FBbkJNOztBQXFCUixZQUFBLEdBQWUsU0FBQTtFQUNkLElBQUcsQ0FBQSxDQUFBLElBQUssTUFBTCxJQUFLLE1BQUwsR0FBYyxHQUFkLENBQUEsSUFBc0IsQ0FBQSxDQUFBLElBQUssTUFBTCxJQUFLLE1BQUwsR0FBYyxHQUFkLENBQXpCO0lBQ0csRUFBQSxHQUFLO0lBQ0wsRUFBQSxHQUFLO1dBQ0wsV0FBQSxDQUFBLEVBSEg7O0FBRGM7O0FBTWYsWUFBQSxHQUFlLFNBQUE7RUFDYixFQUFBLEdBQUssTUFBTSxDQUFDLEtBQVAsQ0FBQTtTQUNMLElBQUEsQ0FBQTtBQUZhOztBQUlmLElBQUEsR0FBTyxTQUFBO0FBQ0wsTUFBQTtFQUFBLFVBQUEsQ0FBQTtBQUNBO0FBQUEsT0FBQSxxQ0FBQTs7QUFDRTtBQUFBLFNBQUEsd0NBQUE7O01BQ0UsUUFBQSxDQUFTLENBQVQsRUFBVyxDQUFYLEVBQWEsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLEVBQUwsRUFBUSxHQUFSLENBQWI7QUFERjtBQURGO0VBR0EsWUFBQSxDQUFBO1NBQ0EsV0FBQSxDQUFBO0FBTks7O0FBUVAsV0FBQSxHQUFjLFNBQUE7RUFDWixNQUFNLENBQUMsS0FBUCxDQUFlLENBQUMsRUFBQSxDQUFHLEVBQUEsR0FBRyxHQUFOLEVBQVUsQ0FBVixFQUFZLENBQVosQ0FBRCxDQUFBLEdBQWdCLElBQWhCLEdBQW1CLENBQUMsRUFBQSxDQUFHLEVBQUEsR0FBRyxHQUFOLEVBQVUsQ0FBVixFQUFZLENBQVosQ0FBRCxDQUFuQixHQUFtQyxJQUFuQyxHQUFzQyxDQUFDLEVBQUEsQ0FBRyxFQUFBLEdBQUcsR0FBTixFQUFVLENBQVYsRUFBWSxDQUFaLENBQUQsQ0FBckQ7RUFDQSxNQUFNLENBQUMsS0FBUCxDQUFnQixFQUFELEdBQUksSUFBSixHQUFRLEVBQVIsR0FBVyxJQUFYLEdBQWUsRUFBOUI7RUFDQSxJQUFBLENBQUssRUFBTCxFQUFRLEVBQVIsRUFBVyxFQUFYO1NBQ0EsSUFBQSxDQUFLLEdBQUwsRUFBUyxDQUFULEVBQVcsR0FBWCxFQUFlLEdBQWY7QUFKWTs7QUFNZCxRQUFBLEdBQVcsU0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLEtBQUw7QUFDVCxNQUFBO0VBQUEsS0FBQSxHQUFRLENBQUEsR0FBSSxDQUFDLENBQUMsQ0FBQSxHQUFFLENBQUgsQ0FBQSxHQUFRLEdBQVIsR0FBYyxDQUFkLEdBQWtCLENBQW5CO0VBQ1osTUFBTyxDQUFBLEtBQUEsR0FBTSxDQUFOLENBQVAsR0FBa0IsS0FBTSxDQUFBLENBQUE7RUFDeEIsTUFBTyxDQUFBLEtBQUEsR0FBTSxDQUFOLENBQVAsR0FBa0IsS0FBTSxDQUFBLENBQUE7RUFDeEIsTUFBTyxDQUFBLEtBQUEsR0FBTSxDQUFOLENBQVAsR0FBa0IsS0FBTSxDQUFBLENBQUE7U0FDeEIsTUFBTyxDQUFBLEtBQUEsR0FBTSxDQUFOLENBQVAsR0FBa0IsS0FBTSxDQUFBLENBQUE7QUFMZiIsInNvdXJjZXNDb250ZW50IjpbInNsaWRlciA9IDBcbmlucHV0MSA9IDBcbmlucHV0MiA9IDBcbnJyID0gMFxuZ2cgPSAwXG5iYiA9IDBcblxuc2V0dXAgPSAtPlxuICBjYW52YXMgPSBjcmVhdGVDYW52YXMgNTEyLDUxMlxuICBjYW52YXMucG9zaXRpb24gMjAsMjBcbiAgcGl4ZWxEZW5zaXR5IDFcblxuICBzbGlkZXIgPSBjcmVhdGVTbGlkZXIgMCwgMjU1LCAwXG4gIHNsaWRlci5wb3NpdGlvbiAyMCwgMjg1XG4gIHNsaWRlci5pbnB1dCBzbGlkZXJjaGFuZ2VcbiAgc2xpZGVyLnNpemUgNTEyLDIwXG5cbiAgaW5wdXQxID0gY3JlYXRlSW5wdXQoKVxuICBpbnB1dDEucG9zaXRpb24gMjAsIDMyMFxuICBpbnB1dDEuc2l6ZSAyNTYsIDIwXG5cbiAgaW5wdXQyID0gY3JlYXRlSW5wdXQoKVxuICBpbnB1dDIucG9zaXRpb24gMjU2KzIwLCAzMjBcbiAgaW5wdXQyLnNpemUgMjU2LCAyMFxuXG4gIHNjKClcbiAgc2hvdygpXG5cbm1vdXNlUHJlc3NlZCA9IC0+XG5cdGlmIDAgPD0gbW91c2VYIDwgMjU2IGFuZCAwIDw9IG1vdXNlWSA8IDI1NlxuICAgIHJyID0gbW91c2VYXG4gICAgZ2cgPSBtb3VzZVlcbiAgICBzaG93TnVtYmVycygpXG5cbnNsaWRlcmNoYW5nZSA9IC0+XG4gIGJiID0gc2xpZGVyLnZhbHVlKClcbiAgc2hvdygpXG5cbnNob3cgPSAtPlxuICBsb2FkUGl4ZWxzKClcbiAgZm9yIHIgaW4gcmFuZ2UgMjU2XG4gICAgZm9yIGcgaW4gcmFuZ2UgMjU2XG4gICAgICBzZXRQaXhlbCByLGcsW3IsZyxiYiwyNTVdIFxuICB1cGRhdGVQaXhlbHMoKVxuICBzaG93TnVtYmVycygpXG5cbnNob3dOdW1iZXJzID0gLT5cbiAgaW5wdXQxLnZhbHVlIFwiI3tuZihyci8yNTUsMSwzKX0sICN7bmYoZ2cvMjU1LDEsMyl9LCAje25mKGJiLzI1NSwxLDMpfVwiXG4gIGlucHV0Mi52YWx1ZSBcIiN7cnJ9LCAje2dnfSwgI3tiYn1cIlxuICBmaWxsIHJyLGdnLGJiXG4gIHJlY3QgMjU2LDAsMjU2LDI1NlxuXG5zZXRQaXhlbCA9IChpLGoscGl4ZWwpIC0+XG4gIGluZGV4ID0gNCAqICgoMCtqKSAqIDUxMiArIDAgKyBpKVxuICBwaXhlbHNbaW5kZXgrMF0gPSBwaXhlbFswXVxuICBwaXhlbHNbaW5kZXgrMV0gPSBwaXhlbFsxXVxuICBwaXhlbHNbaW5kZXgrMl0gPSBwaXhlbFsyXVxuICBwaXhlbHNbaW5kZXgrM10gPSBwaXhlbFszXVxuIl19
//# sourceURL=C:\github\p5Color\sketch.coffee